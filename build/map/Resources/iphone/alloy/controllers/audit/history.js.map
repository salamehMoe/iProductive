{"version":3,"sources":["template.js","app/controllers/audit/history.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ADgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/Users/exsalameh/Desktop/iProductive-2/Resources/iphone/alloy/controllers/audit/history.js","sourceRoot":"/Users/exsalameh/Desktop/iProductive-2","sourcesContent":["var Alloy = require('/alloy'),\n\tBackbone = Alloy.Backbone,\n\t_ = Alloy._;\n\n\n\n\nfunction __processArg(obj, key) {\n\tvar arg = null;\n\tif (obj) {\n\t\targ = obj[key] || null;\n\t}\n\treturn arg;\n}\n\nfunction Controller() {\n\t\n\trequire('/alloy/controllers/' + 'BaseController').apply(this, Array.prototype.slice.call(arguments));\n\tthis.__controllerPath = 'audit/history';\n\tthis.args = arguments[0] || {};\n\n\tif (arguments[0]) {\n\t\tvar __parentSymbol = __processArg(arguments[0], '__parentSymbol');\n\t\tvar $model = __processArg(arguments[0], '$model');\n\t\tvar __itemTemplate = __processArg(arguments[0], '__itemTemplate');\n\t}\n\tvar $ = this;\n\tvar exports = {};\n\tvar __defers = {};\n\n\t// Generated code that must be executed before all UI and/or\n\t// controller code. One example is all model and collection\n\t// declarations from markup.\n\tAlloy.Collections.instance('auditRecord');\n\n\t// Generated UI code\n\t$.__views[\"history\"] = (require(\"xp.ui\").createWindow || Ti.UI.createWindow)(\n{backgroundColor:\"#ffffff\",translucent:true,tintColor:Alloy.CFG.tintColor,navTintColor:\"#ffffff\",barColor:Alloy.CFG.borderColor,includeOpaqueBars:true,autoAdjustScrollViewInsets:false,statusBarStyle:Ti.UI.iOS.StatusBar.LIGHT_CONTENT,extendEdges:[Ti.UI.EXTEND_EDGE_TOP,Ti.UI.EXTEND_EDGE_BOTTOM,],title:\"History\",id:\"history\",}\n);\n$.__views[\"history\"] && $.addTopLevelView($.__views[\"history\"]);\n$.__views[\"__alloyId31\"] = Alloy.createController('centerNavBtns',{id:\"__alloyId31\",__parentSymbol:$.__views[\"history\"],});\n$.__views[\"__alloyId31\"].setParent($.__views[\"history\"]);\nif ((OS_IOS)) {\n$.__views[\"__alloyId32\"] = Ti.UI.createSearchBar(\n{hintText:\"Search ...\",barColor:\"#115EAC\",tintColor:\"#ffffff\",keyboardType:Titanium.UI.RETURNKEY_SEARCH,returnKeyType:Titanium.UI.RETURNKEY_SEARCH,id:\"__alloyId32\",}\n);\n}\n$.__views[\"headerView\"] = Ti.UI.createView(\n{backgroundColor:\"#efefef\",height:60,id:\"headerView\",}\n);\n$.__views[\"__alloyId36\"] = Ti.UI.createLabel(\n{textAlign:Titanium.UI.TEXT_ALIGNMENT_LEFT,text:'Completed audits which were submitted to the server',id:\"__alloyId36\",}\n);\n$.__views[\"headerView\"].add($.__views[\"__alloyId36\"]);\n$.__views[\"__alloyId33\"] = Ti.UI.createListSection(\n{headerView:$.__views[\"headerView\"],id:\"__alloyId33\",}\n);\nvar __alloyId40=Alloy.Collections['auditRecord'] || auditRecord;function __alloyId41(e) {   if (e && e.fromAdapter) { return; }   var opts = __alloyId41.opts || {};\tvar models = __alloyId40.models;\tvar len = models.length;var __alloyId34=[];\tfor (var i = 0; i < len; i++) {\t\tvar __alloyId37 = models[i];\t\t__alloyId37.__transform = transformFunction(__alloyId37);var __alloyId39 = {properties:{height:70,accessoryType:Ti.UI.LIST_ACCESSORY_TYPE_DISCLOSURE,title:__alloyId37.__transform.AuditName,searchableText:__alloyId37.__transform.AuditName,subtitle:__alloyId37.__transform.subTitle,auditRecordID:__alloyId37.__transform.id,storeCode:__alloyId37.__transform.storeCode,deptCode:__alloyId37.__transform.deptCode,AuditID:__alloyId37.__transform.AuditID,openDate:__alloyId37.__transform.openDate,submisiondDate:__alloyId37.__transform.submisiondDate,submittedBy:__alloyId37.__transform.submittedBy,online_id:__alloyId37.__transform.online_id,CompanyTypeID:__alloyId37.__transform.CompanyTypeID,DeptCode:__alloyId37.__transform.DeptCode,AuditDesc:__alloyId37.__transform.AuditDesc,Target:__alloyId37.__transform.Target,type:__alloyId37.__transform.type,comment:__alloyId37.__transform.comment,},};__alloyId34.push(__alloyId39);\t}opts.animation ? $.__views[\"__alloyId33\"].setItems(__alloyId34, opts.animation) : $.__views[\"__alloyId33\"].items = __alloyId34;};__alloyId40.on('fetch destroy change add remove reset',__alloyId41);var __alloyId42=[];__alloyId42.push($.__views[\"__alloyId33\"]);$.__views[\"list\"] = Ti.UI.createListView(\n{defaultItemTemplate:Ti.UI.LIST_ITEM_TEMPLATE_SUBTITLE,top:62,sections:__alloyId42,searchView:$.__views[\"__alloyId32\"],id:\"list\",}\n);\n$.__views[\"history\"].add($.__views[\"list\"]);\nopenTemplate?$.addListener($.__views[\"list\"],'itemclick',openTemplate):__defers['$.__views[\"list\"]!itemclick!openTemplate']=true;exports.destroy = function () {__alloyId40 && __alloyId40.off('fetch destroy change add remove reset',__alloyId41);};\n\n\t// make all IDed elements in $.__views available right on the $ in a\n\t// controller's internal code. Externally the IDed elements will\n\t// be accessed with getView().\n\t_.extend($, $.__views);\n\n\t// Controller code directly from the developer's controller file\n\t__MAPMARKER_CONTROLLER_CODE__\n\n\t// Generated code that must be executed after all UI and\n\t// controller code. One example deferred event handlers whose\n\t// functions are not defined until after the controller code\n\t// is executed.\n\t__defers['$.__views[\"list\"]!itemclick!openTemplate'] && $.addListener($.__views[\"list\"],'itemclick',openTemplate);\n\n\t// Extend the $ instance with all functions and properties\n\t// defined on the exports object.\n\t_.extend($, exports);\n}\n\nmodule.exports = Controller;\n","var openTemplate = function (e) {\n\n  var item = e.section.getItemAt(e.itemIndex);\n\n  Alloy.Globals.pageStack.open(Alloy.createController('audit/sections', {\n    item: item.properties,\n    formPrams: {\n      auditRecordID: item.properties.auditRecordID,\n      deptCode: item.properties.deptCode,\n      store: item.properties.storeCode,\n      date: item.properties.openDate,\n      comment: item.properties.comment },\n\n    notEditable: true,\n    isHistory: true }).\n  getView());\n\n};\n\nfunction transformFunction(model) {\n  var transform = model.toJSON();\n  transform.subTitle = transform.storeCode + \" / \" + transform.openDate;\n  return transform;\n}\n\n\n\ntry {\n  Alloy.Collections.auditRecord.fetch({\n    query: \"SELECT a.*, t.* FROM auditRecord a JOIN templates t ON t.AuditID = a.AuditID WHERE length(a.online_id) > 0\" });\n\n} catch (e) {\n  //Ti.API.Info('error -> '+JSON.stringify(e));\n}\n\n\n$.history.addEventListener(\"close\", function () {\n  $.destroy();\n});"]}