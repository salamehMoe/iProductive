{"version":3,"sources":["template.js","app/controllers/audit/sections.js"],"names":[],"mappingstxjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/Users/exsalameh/Desktop/iProductive-2/Resources/iphone/alloy/controllers/audit/sections.js","sourceRoot":"/Users/exsalameh/Desktop/iProductive-2","sourcesContent":["var Alloy = require('/alloy'),\n\tBackbone = Alloy.Backbone,\n\t_ = Alloy._;\n\n\n\n\nfunction __processArg(obj, key) {\n\tvar arg = null;\n\tif (obj) {\n\t\targ = obj[key] || null;\n\t}\n\treturn arg;\n}\n\nfunction Controller() {\n\t\n\trequire('/alloy/controllers/' + 'BaseController').apply(this, Array.prototype.slice.call(arguments));\n\tthis.__controllerPath = 'audit/sections';\n\tthis.args = arguments[0] || {};\n\n\tif (arguments[0]) {\n\t\tvar __parentSymbol = __processArg(arguments[0], '__parentSymbol');\n\t\tvar $model = __processArg(arguments[0], '$model');\n\t\tvar __itemTemplate = __processArg(arguments[0], '__itemTemplate');\n\t}\n\tvar $ = this;\n\tvar exports = {};\n\tvar __defers = {};\n\n\t// Generated code that must be executed before all UI and/or\n\t// controller code. One example is all model and collection\n\t// declarations from markup.\n\tAlloy.Collections.instance('sections');\n\n\t// Generated UI code\n\t$.__views[\"sections\"] = (require(\"xp.ui\").createWindow || Ti.UI.createWindow)(\n{backgroundColor:\"#ffffff\",translucent:true,tintColor:Alloy.CFG.tintColor,navTintColor:\"#ffffff\",barColor:Alloy.CFG.borderColor,includeOpaqueBars:true,autoAdjustScrollViewInsets:false,statusBarStyle:Ti.UI.iOS.StatusBar.LIGHT_CONTENT,extendEdges:[Ti.UI.EXTEND_EDGE_TOP,Ti.UI.EXTEND_EDGE_BOTTOM,],id:\"sections\",title:\"Template Sections\",}\n);\n$.__views[\"sections\"] && $.addTopLevelView($.__views[\"sections\"]);\nif ((OS_IOS)) {\n$.__views[\"__alloyId313\"] = Ti.UI.createSearchBar(\n{hintText:\"Search ...\",barColor:\"#115EAC\",tintColor:\"#ffffff\",keyboardType:Titanium.UI.RETURNKEY_SEARCH,returnKeyType:Titanium.UI.RETURNKEY_SEARCH,id:\"__alloyId313\",}\n);\n}\nvar __alloyId314={};var __alloyId317=[];var __alloyId318={type:'Ti.UI.Label',bindId:'info',properties:{textAlign:Titanium.UI.TEXT_ALIGNMENT_LEFT,color:\"black\",left:\"10dp\",top:0,bindId:\"info\",},};__alloyId317.push(__alloyId318);var __alloyId319={type:'Ti.UI.Label',bindId:'es_info',properties:{textAlign:Titanium.UI.TEXT_ALIGNMENT_LEFT,font:{fontSize:\"14dp\",},left:\"10dp\",top:\"25dp\",color:\"blue\",bindId:\"es_info\",},};__alloyId317.push(__alloyId319);var __alloyId316 = {properties:{name:\"template\",},childTemplates:__alloyId317,};__alloyId314[\"template\"]=__alloyId316;$.__views[\"headerView\"] = Ti.UI.createView(\n{backgroundColor:\"#efefef\",height:60,id:\"headerView\",}\n);\n$.__views[\"sectionHeaderLbl\"] = Ti.UI.createLabel(\n{textAlign:Titanium.UI.TEXT_ALIGNMENT_LEFT,id:\"sectionHeaderLbl\",}\n);\n$.__views[\"headerView\"].add($.__views[\"sectionHeaderLbl\"]);\n$.__views[\"commentBtn\"] = Ti.UI.createButton(\n{right:20,color:\"white\",backgroundColor:\"#115EAC\",width:105,borderRadius:3,title:'Comment',id:\"commentBtn\",}\n);\n$.__views[\"headerView\"].add($.__views[\"commentBtn\"]);\nopenComment?$.addListener($.__views[\"commentBtn\"],'click',openComment):__defers['$.__views[\"commentBtn\"]!click!openComment']=true;$.__views[\"__alloyId320\"] = Ti.UI.createListSection(\n{headerView:$.__views[\"headerView\"],id:\"__alloyId320\",}\n);\nvar __alloyId326=Alloy.Collections['sections'] || sections;function __alloyId327(e) {   if (e && e.fromAdapter) { return; }   var opts = __alloyId327.opts || {};\tvar models = __alloyId326.models;\tvar len = models.length;var __alloyId321=[];\tfor (var i = 0; i < len; i++) {\t\tvar __alloyId323 = models[i];\t\t__alloyId323.__transform = transformFunction(__alloyId323);var __alloyId325 = {properties:{height:60,accessoryType:Ti.UI.LIST_ACCESSORY_TYPE_DISCLOSURE,SectionID:__alloyId323.__transform.SectionID,searchableText:__alloyId323.__transform.SectionDesc,weightTotal:__alloyId323.__transform.weightTotal,},info:{text:__alloyId323.__transform.SectionDesc,},es_info:{text:__alloyId323.__transform.subTitle,},};__alloyId321.push(__alloyId325);\t}opts.animation ? $.__views[\"__alloyId320\"].setItems(__alloyId321, opts.animation) : $.__views[\"__alloyId320\"].items = __alloyId321;};__alloyId326.on('fetch destroy change add remove reset',__alloyId327);var __alloyId328=[];__alloyId328.push($.__views[\"__alloyId320\"]);$.__views[\"list\"] = Ti.UI.createListView(\n{defaultItemTemplate:\"template\",top:62,sections:__alloyId328,templates:__alloyId314,searchView:$.__views[\"__alloyId313\"],id:\"list\",}\n);\n$.__views[\"sections\"].add($.__views[\"list\"]);\nclickSection?$.addListener($.__views[\"list\"],'itemclick',clickSection):__defers['$.__views[\"list\"]!itemclick!clickSection']=true;$.__views[\"answersLayer\"] = Ti.UI.createView(\n{opacity:0,id:\"answersLayer\",title:\"Completed Audits\",}\n);\n$.__views[\"answersLayer\"] && $.addTopLevelView($.__views[\"answersLayer\"]);\n$.__views[\"__alloyId329\"] = Ti.UI.createView(\n{backgroundColor:\"#000000\",opacity:0.7,id:\"__alloyId329\",}\n);\n$.__views[\"answersLayer\"].add($.__views[\"__alloyId329\"]);\n$.__views[\"containner\"] = Ti.UI.createView(\n{layout:\"vertical\",height:Ti.UI.SIZE,backgroundColor:\"#ffffff\",width:\"80%\",borderRadius:2,id:\"containner\",}\n);\n$.__views[\"answersLayer\"].add($.__views[\"containner\"]);\n$.__views[\"__alloyId330\"] = Ti.UI.createView(\n{height:60,id:\"__alloyId330\",}\n);\n$.__views[\"containner\"].add($.__views[\"__alloyId330\"]);\n$.__views[\"__alloyId331\"] = Ti.UI.createImageView(\n{width:50,height:50,image:\"/appicon.png\",left:10,id:\"__alloyId331\",}\n);\n$.__views[\"__alloyId330\"].add($.__views[\"__alloyId331\"]);\n$.__views[\"titleLbl\"] = Ti.UI.createLabel(\n{textAlign:Titanium.UI.TEXT_ALIGNMENT_LEFT,text:\"Add comment to the Template\",left:73,font:{fontSize:22,},id:\"titleLbl\",}\n);\n$.__views[\"__alloyId330\"].add($.__views[\"titleLbl\"]);\n$.__views[\"__alloyId332\"] = Ti.UI.createView(\n{height:1,backgroundColor:\"gray\",id:\"__alloyId332\",}\n);\n$.__views[\"containner\"].add($.__views[\"__alloyId332\"]);\n$.__views[\"__alloyId333\"] = Ti.UI.createView(\n{backgroundColor:\"silver\",layout:\"horizontal\",width:\"80%\",height:200,top:20,id:\"__alloyId333\",}\n);\n$.__views[\"containner\"].add($.__views[\"__alloyId333\"]);\n$.__views[\"__alloyId334\"] = Ti.UI.createLabel(\n{textAlign:\"center\",backgroundColor:\"#ffffff\",font:{fontSize:19,},left:1,bottom:2,height:Ti.UI.FILL,width:110,color:\"silver\",text:'Comment',id:\"__alloyId334\",}\n);\n$.__views[\"__alloyId333\"].add($.__views[\"__alloyId334\"]);\n$.__views[\"Comment\"] = Ti.UI.createTextArea(\n{color:Alloy.CFG.borderColor,top:0,left:0,right:0,bottom:2,hintText:\"comment....\",padding:{right:3,},font:{fontSize:19,},keyboardType:Ti.UI.KEYBOARD_DEFAULT,returnKeyType:Ti.UI.RETURNKEY_DONE,bubbleParent:false,id:\"Comment\",}\n);\n$.__views[\"__alloyId333\"].add($.__views[\"Comment\"]);\n$.__views[\"__alloyId335\"] = Ti.UI.createView(\n{backgroundColor:\"white\",layout:\"horizontal\",width:\"90%\",height:40,top:60,id:\"__alloyId335\",}\n);\n$.__views[\"containner\"].add($.__views[\"__alloyId335\"]);\n$.__views[\"Score\"] = Ti.UI.createLabel(\n{textAlign:\"center\",backgroundColor:\"#ffffff\",font:{fontSize:16,},left:1,bottom:2,height:Ti.UI.FILL,width:300,color:\"blue\",text:'Hello world',id:\"Score\",}\n);\n$.__views[\"__alloyId335\"].add($.__views[\"Score\"]);\n$.__views[\"__alloyId336\"] = Ti.UI.createView(\n{layout:\"horizontal\",right:\"10%\",top:70,width:Ti.UI.SIZE,height:40,id:\"__alloyId336\",}\n);\n$.__views[\"containner\"].add($.__views[\"__alloyId336\"]);\n$.__views[\"cancelBtn\"] = Ti.UI.createButton(\n{color:\"#ffffff\",tintColor:\"#ffffff\",backgroundColor:Alloy.CFG.tintColor,borderRadius:2,font:{fontSize:22,},width:100,right:20,title:'Cancel',id:\"cancelBtn\",}\n);\n$.__views[\"__alloyId336\"].add($.__views[\"cancelBtn\"]);\nhideanswerLayer?$.addListener($.__views[\"cancelBtn\"],'click',hideanswerLayer):__defers['$.__views[\"cancelBtn\"]!click!hideanswerLayer']=true;$.__views[\"saveBtn\"] = Ti.UI.createButton(\n{color:\"#ffffff\",tintColor:\"#ffffff\",backgroundColor:Alloy.CFG.borderColor,borderRadius:2,font:{fontSize:22,},width:180,title:'Save Comment',id:\"saveBtn\",}\n);\n$.__views[\"__alloyId336\"].add($.__views[\"saveBtn\"]);\nsaveComment?$.addListener($.__views[\"saveBtn\"],'click',saveComment):__defers['$.__views[\"saveBtn\"]!click!saveComment']=true;$.__views[\"__alloyId337\"] = Ti.UI.createView(\n{height:20,id:\"__alloyId337\",}\n);\n$.__views[\"containner\"].add($.__views[\"__alloyId337\"]);\nexports.destroy = function () {__alloyId326 && __alloyId326.off('fetch destroy change add remove reset',__alloyId327);};\n\n\t// make all IDed elements in $.__views available right on the $ in a\n\t// controller's internal code. Externally the IDed elements will\n\t// be accessed with getView().\n\t_.extend($, $.__views);\n\n\t// Controller code directly from the developer's controller file\n\t__MAPMARKER_CONTROLLER_CODE__\n\n\t// Generated code that must be executed after all UI and\n\t// controller code. One example deferred event handlers whose\n\t// functions are not defined until after the controller code\n\t// is executed.\n\t__defers['$.__views[\"commentBtn\"]!click!openComment'] && $.addListener($.__views[\"commentBtn\"],'click',openComment);__defers['$.__views[\"list\"]!itemclick!clickSection'] && $.addListener($.__views[\"list\"],'itemclick',clickSection);__defers['$.__views[\"cancelBtn\"]!click!hideanswerLayer'] && $.addListener($.__views[\"cancelBtn\"],'click',hideanswerLayer);__defers['$.__views[\"saveBtn\"]!click!saveComment'] && $.addListener($.__views[\"saveBtn\"],'click',saveComment);\n\n\t// Extend the $ instance with all functions and properties\n\t// defined on the exports object.\n\t_.extend($, exports);\n}\n\nmodule.exports = Controller;\n","var args = arguments[0] || {};\n//Ti.API.Info(\"hi from sections\");\nargs.notEditable = args.notEditable || false;\nvar isScoreCard = args.item.type == 2;\nvar totalScore = \"\";\nvar totalWeight = \"\";\nvar totalWeightTotal = 0;\nvar win = Ti.UI.currentWindow;\n\n//Ti.API.Info('>>>>>>>> in sections');\n\nAlloy.Globals.Penalities = 0;\n\n// $.sections.addEventListener(\"open\", function(e) {\n//\n// $.index.activity.addEventListener(\"resume\", function() {\n//\n// alert(\"resume\");\n//\n// });\n// $.index.activity.addEventListener(\"pause\", function() {\n//\n// alert(\"pause\");\n//\n// });\n//\n// });\n\nvar clickSection = function (e) {\n\n  var item = e.section.getItemAt(e.itemIndex);\n  if (isScoreCard) {\n    Alloy.Globals.pageStack.open(Alloy.createController('audit/scoreCardQuestions', {\n      AuditID: args.item.AuditID,\n      auditRecordID: args.formPrams.auditRecordID,\n      deptCode: args.formPrams.deptCode,\n      section: item.properties,\n      template: args.item,\n      notEditable: args.notEditable,\n      saveCallBack: save,\n      refreshSections: refreshSections }).\n    getView());\n\n  } else {\n\n    Alloy.Globals.pageStack.open(Alloy.createController('audit/questions', {\n      AuditID: args.item.AuditID,\n      auditRecordID: args.formPrams.auditRecordID,\n      deptCode: args.formPrams.deptCode,\n      section: item.properties,\n      template: args.item,\n      notEditable: args.notEditable,\n      saveCallBack: save,\n      isIncomplete: args.isIncomplete,\n      refreshSections: refreshSections }).\n    getView());\n  }\n};\n\n$.sectionHeaderLbl.setText(args.item.title);\n//$.Comment.setValue(args.formPrams.comment);\n\nfunction refreshSections() {\n\n  var tableName = isScoreCard ? 'questions_scorecard' : 'questions',\n  select = isScoreCard ? \"\" : \", IFNULL(sum(q.QWeight), 0) weightTotal \";\n\n  var query = \"select dt_sections.FuckedID FuckedID, dt_sections.SectionID SectionID, dt_sections.AuditID AuditID, dt_sections.sectionDesc SectionDesc, dt_sections.SectionOrder SectionOrder, dt_sections.ParentID ParentID, dt_sections.RootID RootID\";\n  query += select + \" from \" + tableName + \" q inner join \";\n  query += \" (select s1.FuckedID, s1.SectionID, s1.AuditID, s1.sectionDesc, s1.SectionOrder, s1.ParentID, s1.RootID, s.sectionid fuck, s.AuditID\";\n  if (isScoreCard) {\n    query += \" from sections s inner join sections  s1 on s.rootid = s1.sectionid where s1.AuditID = \" + args.item.AuditID + \" ) dt_sections\";\n\n  } else {\n    query += \" from sections s inner join sections  s1 on s.rootid = s1.sectionid where s1.AuditID = \" + args.item.AuditID + \" and s.AuditID = \" + args.item.AuditID + \" ) dt_sections\";\n\n  }\n  if (isScoreCard) {\n    query += \" on q.sectionid = dt_sections.fuck \";\n  } else {\n    query += \" on q.sectionid = dt_sections.fuck and q.AuditID = \" + args.item.AuditID;\n  }\n  query += \" group by dt_sections.sectionid  \";\n\n  if (isScoreCard) {\n    query = \"SELECT s1.* \" + select + \"FROM sections s1 \" + \"JOIN \" + tableName + \" q ON q.AuditID = s1.AuditID AND (q.SectionID = s.SectionID or q.SectionID = s1.SectionID) \" + \"LEFT JOIN sections s ON s.AuditID = s1.AuditID AND s1.SectionID = s.ParentID \" + \"WHERE s1.AuditID = \" + args.item.AuditID + \" AND s1.ParentID = 0 \" + \"group by s1.SectionID \" + \"ORDER BY s1.SectionOrder\";\n\n  }\n  //Ti.API.Info(query);\n\n  try {\n    Alloy.Collections.sections.fetch({\n      query: query //\"SELECT s1.* \" + select + \"FROM sections s1 \" + \"JOIN \" + tableName + \" q ON q.AuditID = s1.AuditID AND (q.SectionID = s.SectionID or q.SectionID = s1.SectionID) \" + \"LEFT JOIN sections s ON s.AuditID = s1.AuditID AND (s1.SectionID = s.ParentID or s1.ParentID = s.SectionID) \" + \"WHERE s1.AuditID = \" + args.item.AuditID + \" AND s1.ParentID = 0 \" + \"group by s1.SectionID \" + \"ORDER BY s1.SectionOrder\"\n    });\n  } catch (e) {\n\n  } //Ti.API.Info('error -> '+JSON.stringify(e));\n\n\n  ////Ti.API.Info(\"SELECT s1.* \" + select + \"FROM sections s1 \" + \"JOIN \" + tableName + \" q ON q.AuditID = s1.AuditID AND (q.SectionID = s.SectionID or q.SectionID = s1.SectionID) \" + \"LEFT JOIN sections s ON s.AuditID = s1.AuditID AND (s1.SectionID = s.ParentID or s1.ParentID = s.SectionID) \" + \"WHERE s1.AuditID = \" + args.item.AuditID + \" AND s1.ParentID = 0 \" + \"group by s1.SectionID \" + \"ORDER BY s1.SectionOrder\");\n\n}\n\nrefreshSections();\n\nfunction transformFunction(model) {\n  var transform = model.toJSON();\n  if (isScoreCard) {\n    return _.extend(transform, {\n      subTitle: '' });\n\n  }\n\n  totalScore = model.getTotalScore(args.formPrams.auditRecordID);\n  //Ti.API.Info('Total Score = ' + totalScore);\n  totalWeight = model.getTotalWeight(args.formPrams.auditRecordID);\n  //Ti.API.Info('Total Weight = ' + totalWeight);\n  totalWeightTotal = model.getTotalWeightTotal(args.formPrams.auditRecordID);\n\n  transform.weight = model.getWeight(args.formPrams.auditRecordID, true);\n\n  //Ti.API.Info(' transform.weightTotal = ' + transform.weightTotal);\n\n  //Ti.API.Info(' transform.weight = ' + transform.weight);\n\n  transform.scorePercent = model.getScore(args.formPrams.auditRecordID, true, transform.weight == transform.weightTotal);\n  //Ti.API.Info('Total Weight total = ' + totalWeightTotal);\n  totalScore = transform.scorePercent;\n\n  transform.subTitle = transform.weight + ' / ' + transform.weightTotal + \"        Finished: \" + ((transform.weight / transform.weightTotal || 0) * 100).toFixed(3) + \" %       Score: \" + totalScore + \" %\";\n  return transform;\n}\n\nfunction resetNavBar() {\n  // if(OS_IOS)\n  // return;\n  // var activity = Ti.Android.currentActivity;\n  // // need to explicitly use getXYZ methods\n  // var actionBar = activity.getActionBar();\n  //\n  // if (actionBar) {\n  // // Now we can do stuff to the actionbar\n  // actionBar.setTitle('iProductive');\n  //\n  // actionBar.setIcon('/images/appicon.png');\n  //\n  // activity.onCreateOptionsMenu = function(e) {\n  // var menuItem = e.menu.add({\n  // showAsAction : Ti.Android.SHOW_AS_ACTION_ALWAYS,\n  // icon : \"/images/user.png\"\n  // });\n  // menuItem.addEventListener(\"click\", function(e) {\n  // Ti.API.log('right button clicked');\n  // var win = Ti.UI.createWindow({\n  // title : 'Profile'\n  // });\n  // var profile = Alloy.createController('profile');\n  // profile.on('logout', function() {\n  // win.close();\n  // });\n  // win.add(profile.getView());\n  // win.open();\n  // });\n  // };\n  // activity.invalidateOptionsMenu();\n  //\n  // // show an angle bracket next to the home icon,\n  // // indicating to users that the home icon is tappable\n  // //actionBar.setDisplayHomeAsUp(true);\n  //\n  // // toggle the left window when the home icon is selected\n  // // actionBar.onHomeIconItemSelected = function() {\n  // // Ti.API.log('home button clicked');\n  // // $.drawer.toggleLeftWindow();\n  // // };\n  // }\n}\n\nfunction reset() {\n  var confirm = Ti.UI.createAlertDialog({\n    title: 'Are you sure?',\n    message: 'Reset auditing?',\n    buttonNames: ['Reset', 'Cancel'] });\n\n\n  confirm.addEventListener('click', function (e) {\n    switch (e.index) {\n      case 0:\n        var answersCollaction = Alloy.createCollection('answers');\n\n        answersCollaction.on('fetch', function () {\n          var model = answersCollaction.models[0];\n          //Ti.API.Info(\"here loop count:\" + model.get('count'));\n\n          var myModel = Alloy.createModel('auditRecord');\n\n          myModel.fetch({\n            id: args.formPrams.auditRecordID });\n\n\n          myModel.save({\n            online_id: '' });\n\n          Alloy.Collections.auditRecord.remove(myModel);\n\n          Alloy.Globals.pageStack.close($.sections);\n\n        });\n        try {\n          answersCollaction.fetch({\n            query: \"SELECT count(a.id) count, (SELECT count(at.id) FROM answers at WHERE at.AuditRecordID = a.AuditRecordID) total FROM answers a WHERE AuditRecordID = \" + args.formPrams.auditRecordID + \" AND length(AnswerDate) > 0\" });\n\n        } catch (e) {\n          //Ti.API.Info('error -> '+JSON.stringify(e));\n        }\n\n        resetNavBar();\n\n        //alert(\"Reset Clicked\");\n        break;\n      case 1:\n\n        // alert(\"Cancel Clicked\");\n        Alloy.Globals.pageStack.close($.sections);\n        resetNavBar();\n        // var answersCollaction = Alloy.createCollection('answers');\n        //\n        // answersCollaction.on('fetch', function() {\n        // var model = answersCollaction.models[0];\n        // //Ti.API.Info(\"here loop count:\" + model.get('count'));\n        //\n        // if (model.get('count') < model.get('total') || model.get('count') == 0) {\n        //\n        // Ti.UI.createAlertDialog({\n        // title : 'This Audit form NOT completed',\n        // message : 'you have to complete the audit form to submit it.'\n        // }).show();\n        //\n        // answersCollaction = null;\n        // } else {\n        // var myModel = Alloy.createModel('auditRecord');\n        //\n        // myModel.fetch({\n        // id : args.formPrams.auditRecordID\n        // });\n        //\n        // myModel.save({\n        // submisiondDate : Alloy.Globals.getFullDate(),\n        // submittedBy : Alloy.Globals.user.get('ldap_user')\n        // });\n        // Alloy.Collections.auditRecord.remove(myModel);\n        //\n        // Alloy.Globals.pageStack.close($.sections);\n        // }\n        //\n        // });\n        // answersCollaction.fetch({\n        // query : \"SELECT count(a.id) count, (SELECT count(at.id) FROM answers at WHERE at.AuditRecordID = a.AuditRecordID) total FROM answers a WHERE AuditRecordID = \" + args.formPrams.auditRecordID + \" AND length(AnswerDate) > 0\"\n        // });\n        // resetNavBar();\n        break;}\n\n  });\n\n  confirm.show();\n}\n\nfunction save() {\n  var confirm = Ti.UI.createAlertDialog({\n    title: 'Are you sure?',\n    message: 'Do you want to exit this audit? You may continue later.',\n    buttonNames: ['Save as a draft', 'Submit to server', 'Cancel'] });\n\n\n  confirm.addEventListener('click', function (e) {\n    switch (e.index) {\n      case 0:\n        //Ti.API.Info('case 0 <============================');\n        Alloy.Globals.pageStack.close($.sections);\n        resetNavBar();\n        break;\n      case 1:\n        //Ti.API.Info('case 1 <============================');\n        var answersCollaction = Alloy.createCollection('answers');\n\n        answersCollaction.on('fetch', function () {\n          var model = answersCollaction.models[0];\n          //Ti.API.Info(\"here loop count:\" + model.get('count'));\n          //Ti.API.Info(\"count = \" + model.get('count') + \" total= \" + model.get('total'));\n          //Ti.API.Info(\"the audit is \" + args.item.AuditID);\n\n          if (model.get('count') < model.get('total') || model.get('count') == 0) {\n\n            Ti.UI.createAlertDialog({\n              title: 'This audit has not yet been completed',\n              message: 'Please answer all questions before submitting it to the server.' }).\n            show();\n\n            answersCollaction = null;\n          } else {\n            var myModel = Alloy.createModel('auditRecord');\n\n            myModel.fetch({\n              id: args.formPrams.auditRecordID });\n\n\n            myModel.save({\n              submisiondDate: Alloy.Globals.getFullDate(),\n              submittedBy: Alloy.Globals.user.get('ldap_user') });\n\n            Alloy.Collections.auditRecord.remove(myModel);\n\n            Alloy.Globals.pageStack.close($.sections);\n\n          }\n\n        });\n        try {\n          answersCollaction.fetch({\n            query: \"SELECT count(a.id) count, (SELECT count(at.id) FROM answers at WHERE at.AuditRecordID = a.AuditRecordID) total FROM answers a WHERE AuditRecordID = \" + args.formPrams.auditRecordID + \" AND length(AnswerDate) > 0\" });\n\n        } catch (e) {\n          //Ti.API.Info('error -> '+JSON.stringify(e));\n        }\n        updateCache();\n        resetNavBar();\n        break;}\n\n  });\n\n  confirm.show();\n}\n\nfunction close() {\n\n  var confirm = Ti.UI.createAlertDialog({\n    title: 'Are you sure?',\n    message: 'Do you want to exit this audit? You may continue later.',\n    buttonNames: ['No', 'Yes'] });\n\n\n  confirm.addEventListener('click', function (e) {\n    if (e.index == 1) {\n      //Ti.API.Info('case 1 <============================');\n      updateCache();\n      Alloy.Globals.pageStack.close($.sections);\n      resetNavBar();\n    }\n  });\n\n  confirm.show();\n}\n\nfunction updateCache() {\n  cacheQuestions();\n}\n\n\nfunction cacheQuestions() {\n  //Ti.API.Info('>>> in updateCache');\n  var qCollaction = Alloy.createCollection('questions');\n  //Ti.API.Info('>>> in updateCache 2');\n\n  // qCollaction.on('fetch', function() {\n  // \t//Ti.API.Info('>>> in updateCache 3');\n  // \tvar totalQuestions = []\n  // \tqCollaction.each(function(model) {\n  // \t\ttotalQuestions.push(model.toJSON());\n  //\n  //\n  // \t});\n  // \t//Ti.API.Info('/////////////qCollection to backup////////\\n\\n '+JSON.stringify(totalQuestions)+'\\n\\n////////////////////////');\n  // \tcacheDraftsQuestions(totalQuestions);\n  // });\n  qCollaction.fetch({\n    success: function () {\n      //Ti.API.Info('>>> in updateCache 3');\n      cacheDraftsQuestions(JSON.stringify(qCollaction.models));\n      cacheSections();\n      // var totalQuestions = [];\n      // _.each(qCollaction.models, function(element, index, list){\n      //     totalQuestions.push(element.toJSON());\n      // });\n      // //Ti.API.Info('/////////////qCollection to backup////////\\n\\n '+JSON.stringify(totalQuestions)+'\\n\\n////////////////////////');\n      // cacheDraftsQuestions(totalQuestions);\n    },\n    error: function () {\n      // something is wrong..\n    } });\n\n}\n\nfunction cacheSections() {\n  // cacheDraftsAudits(JSON.stringify(Alloy.Collections.auditRecord));\n  // //Ti.API.Info('trying to cache: ---> '+ JSON.stringify(Alloy.Collections.auditRecord));\n  var sCollaction = Alloy.createCollection('sections');\n  sCollaction.fetch({\n    success: function () {\n      //Ti.API.Info('>>> in updateCache audits !!!!!!!<<<<<<<<<');\n      cacheDraftsSections(JSON.stringify(sCollaction.models));\n      cacheAnswers();\n    },\n    error: function () {\n      // something is wrong..\n    } });\n\n}\n\nfunction cacheAnswers() {\n  var sCollaction = Alloy.createCollection('answers');\n  sCollaction.fetch({\n    success: function () {\n      cacheDraftsAnswers(JSON.stringify(sCollaction.models));\n      cachAuditRecord();\n    },\n    error: function () {\n      // something is wrong..\n    } });\n\n}\n\nfunction cachAuditRecord() {\n  var sCollaction = Alloy.createCollection('auditRecord');\n  sCollaction.fetch({\n    success: function () {\n      cacheAuditRecord(JSON.stringify(sCollaction.models));\n      cachAuditHistory();\n    },\n    error: function () {\n      // something is wrong..\n    } });\n\n}\n\nfunction cacheAuditRecord(auditRecords) {\n  var usersData = Ti.App.Properties.getList(\"CachedDataByUser\", []);\n  if (usersData.filter(function (user) {\n    return user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\");\n  }).length) {\n    usersData.forEach(function (user, i) {\n      if (user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\")) {\n        usersData[i].auditRecords = auditRecords;\n      }\n    });\n  }\n  Ti.App.Properties.setList(\"CachedDataByUser\", usersData);\n}\n\nfunction cachAuditHistory() {\n  var sCollaction = Alloy.createCollection('auditHistory');\n  sCollaction.fetch({\n    success: function () {\n      cacheDraftAuditHistory(JSON.stringify(sCollaction.models));\n    },\n    error: function () {\n      // something is wrong..\n    } });\n\n}\n\nfunction cacheDraftAuditHistory(auditHistory) {\n  var usersData = Ti.App.Properties.getList(\"CachedDataByUser\", []);\n  if (usersData.filter(function (user) {\n    return user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\");\n  }).length) {\n    usersData.forEach(function (user, i) {\n      if (user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\")) {\n        usersData[i].auditHistory = auditHistory;\n      }\n    });\n  }\n  Ti.App.Properties.setList(\"CachedDataByUser\", usersData);\n}\n\n//auditHistory\n//auditRecord\n\n\nfunction cacheDraftsAnswers(answers) {\n  var usersData = Ti.App.Properties.getList(\"CachedDataByUser\", []);\n  if (usersData.filter(function (user) {\n    return user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\");\n  }).length) {\n    usersData.forEach(function (user, i) {\n      if (user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\")) {\n        usersData[i].cachedAnswers = answers;\n      }\n    });\n  }\n  Ti.App.Properties.setList(\"CachedDataByUser\", usersData);\n}\n\nfunction cacheDraftsSections(sections) {\n\n  var usersData = Ti.App.Properties.getList(\"CachedDataByUser\", []);\n  if (usersData.filter(function (user) {\n    return user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\");\n  }).length) {\n    usersData.forEach(function (user, i) {\n      if (user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\")) {\n        usersData[i].cachedSections = sections;\n      }\n    });\n  }\n  Ti.App.Properties.setList(\"CachedDataByUser\", usersData);\n}\n\n\nfunction cacheDraftsQuestions(questions) {\n\n  var usersData = Ti.App.Properties.getList(\"CachedDataByUser\", []);\n  if (usersData.filter(function (user) {\n    return user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\");\n  }).length) {\n    usersData.forEach(function (user, i) {\n      if (user.user == Ti.App.Properties.getString('lastLoginUser', \"noUser\")) {\n        usersData[i].cachedDraftsQuestions = questions;\n      }\n    });\n  }\n  Ti.App.Properties.setList(\"CachedDataByUser\", usersData);\n\n\n  // var usersData = Ti.App.Properties.getList(\"CachedDataByUser\",[]).filter(function(user){\n  // \treturn user.user == Ti.App.Properties.getString('lastLoginUser',\"noUser\");\n  // });\n  //\n  // if (usersData.length) {\n  //   usersData[0].cachedDraftsQuestions = questions\n  // }\n\n}\n\nif (!args.notEditable) {\n\n  if (OS_ANDROID) {\n    Alloy.Globals.activeView = 1;\n    Alloy.Globals.saveSections = save;\n    Alloy.Globals.backSections = close;\n    Alloy.Globals.activity.invalidateOptionsMenu();\n  }\n\n  if (OS_IOS) {\n    var saveBtn = Ti.UI.createButton({\n      image: '/images/icons/save.png' });\n\n    saveBtn.addEventListener('click', save);\n    $.sections.setRightNavButton(saveBtn);\n\n    var closeBtn = Ti.UI.createButton({\n      image: '/images/icons/back.png' });\n\n    closeBtn.addEventListener('click', close);\n    $.sections.setLeftNavButton(closeBtn);\n  } else {\n\n    setAndroidNav();\n  }\n} else {\n\n  if (args.isHistory) {\n    if (OS_ANDROID) {\n      Alloy.Globals.activeView = 1;\n      Alloy.Globals.saveSections = reset;\n      Alloy.Globals.activity.invalidateOptionsMenu();\n    }\n\n    if (OS_IOS) {\n      var saveBtn = Ti.UI.createButton({\n        image: '/images/icons/save.png' });\n\n      saveBtn.addEventListener('click', reset);\n      $.sections.setRightNavButton(saveBtn);\n\n      // var closeBtn = Ti.UI.createButton({\n      // image:'/images/icons/back.png'\n      // });\n      // closeBtn.addEventListener('click', close);\n      // $.sections.setLeftNavButton(closeBtn);\n    }\n  }\n\n  $.Comment.setEditable(false);\n\n}\n\n$.sections.addEventListener(\"close\", function () {\n  if (args.isIncomplete) {\n    args.isIncomplete();\n  }\n  $.destroy();\n\n  if (OS_ANDROID) {\n    Alloy.Globals.activeView = 0;\n    Alloy.Globals.saveButton = undefined;\n    Alloy.Globals.activity.invalidateOptionsMenu();\n  }\n});\n\nfunction setAndroidNav() {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n} // var activity = Ti.Android.currentActivity;\n// // need to explicitly use getXYZ methods\n// var actionBar = activity.getActionBar();\n//\n// if (actionBar) {\n// // Now we can do stuff to the actionbar\n// actionBar.setTitle('iProductive');\n//\n// actionBar.setIcon('/images/appicon.png');\n//\n// activity.onCreateOptionsMenu = function(e) {\n// var menuItem2 = e.menu.add({\n// showAsAction : Ti.Android.SHOW_AS_ACTION_ALWAYS,\n// icon : \"/images/icons/back.png\"\n// });\n// menuItem2.addEventListener(\"click\", close);\n//\n// var menuItem = e.menu.add({\n// showAsAction : Ti.Android.SHOW_AS_ACTION_ALWAYS,\n// icon : \"/images/icons/save.png\"\n// });\n// menuItem.addEventListener(\"click\", save);\n//\n//\n// };\n// activity.invalidateOptionsMenu();\n//\n// // show an angle bracket next to the home icon,\n// // indicating to users that the home icon is tappable\n// //actionBar.setDisplayHomeAsUp(true);\n//\n// // toggle the left window when the home icon is selected\n// // actionBar.onHomeIconItemSelected = function() {\n// // Ti.API.log('home button clicked');\n// // $.drawer.toggleLeftWindow();\n// // };\n// }\n//Ti.API.Info('\\n\\n\\n\\n>>>>>>>>>>>>>>>>> is In sections <<<<<<<<<<<<<<< \\n\\n\\n\\n');\nfunction openComment(e) {//$.Score.text = totalScore;\n  if (OS_IOS) {$.Comment.setSuppressReturn(false);$.Comment.setReturnKeyType(Ti.UI.RETURNKEY_DEFAULT);$.sections.add($.answersLayer);$.answersLayer.animate({ opacity: 1 });} else {$.sections.add($.answersLayer);$.answersLayer.animate({ opacity: 1 });}$.Score.text = totalWeight + ' / ' + totalWeightTotal + \"        Finished: \" + ((totalWeight / totalWeightTotal || 0) * 100).toFixed(3) + \" %       Score: \" + totalScore + \" %\"; //$.Comment.setValue(args.formPrams.comment);\n  //alert(args.formPrams.comment);\n  var auditRecordModel = Alloy.createModel('auditRecord');auditRecordModel.fetch({ id: args.formPrams.auditRecordID });$.Comment.setValue(auditRecordModel.get(\"comment\"));}function hideanswerLayer(e) {$.answersLayer.setOpacity(0); // TO DO Remove view form window\n  var auditRecordModel = Alloy.createModel('auditRecord');\n  auditRecordModel.fetch({\n    id: args.formPrams.auditRecordID });\n\n\n  $.Comment.setValue(auditRecordModel.get(\"comment\"));\n\n  $.sections.remove($.answersLayer);\n\n}\n\nfunction saveComment(e) {\n\n  var auditRecordModel = Alloy.createModel('auditRecord');\n\n  auditRecordModel.fetch({\n    id: args.formPrams.auditRecordID });\n\n  //Ti.API.error(args.formPrams.auditRecordID + $.Comment.getValue() + auditRecordModel.length);\n  auditRecordModel.save({\n    comment: $.Comment.getValue() });\n\n  hideanswerLayer();\n\n}"]}