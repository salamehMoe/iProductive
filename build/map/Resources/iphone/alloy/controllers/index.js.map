{"version":3,"sources":["template.js","app/controllers/index.js"],"names":[],"mappingsnaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/Users/exsalameh/Desktop/iProductive-2/Resources/iphone/alloy/controllers/index.js","sourceRoot":"/Users/exsalameh/Desktop/iProductive-2","sourcesContent":["var Alloy = require('/alloy'),\n\tBackbone = Alloy.Backbone,\n\t_ = Alloy._;\n\n\n\n\nfunction __processArg(obj, key) {\n\tvar arg = null;\n\tif (obj) {\n\t\targ = obj[key] || null;\n\t}\n\treturn arg;\n}\n\nfunction Controller() {\n\t\n\trequire('/alloy/controllers/' + 'BaseController').apply(this, Array.prototype.slice.call(arguments));\n\tthis.__controllerPath = 'index';\n\tthis.args = arguments[0] || {};\n\n\tif (arguments[0]) {\n\t\tvar __parentSymbol = __processArg(arguments[0], '__parentSymbol');\n\t\tvar $model = __processArg(arguments[0], '$model');\n\t\tvar __itemTemplate = __processArg(arguments[0], '__itemTemplate');\n\t}\n\tvar $ = this;\n\tvar exports = {};\n\tvar __defers = {};\n\n\t// Generated code that must be executed before all UI and/or\n\t// controller code. One example is all model and collection\n\t// declarations from markup.\n\tAlloy.Models.instance('user');\n\n\t// Generated UI code\n\t$.__views[\"index\"] = Ti.UI.createWindow(\n{backgroundColor:\"#ffffff\",translucent:true,tintColor:Alloy.CFG.tintColor,navTintColor:\"#ffffff\",barColor:Alloy.CFG.borderColor,includeOpaqueBars:true,autoAdjustScrollViewInsets:true,statusBarStyle:Ti.UI.iOS.StatusBar.LIGHT_CONTENT,extendEdges:[Ti.UI.EXTEND_EDGE_TOP,Ti.UI.EXTEND_EDGE_BOTTOM,],title:\"Login\",id:\"index\",}\n);\n$.__views[\"index\"] && $.addTopLevelView($.__views[\"index\"]);\n;;var __alloyId363 = [];__alloyId363.push(\"KSA\");__alloyId363.push(\"Iran\");__alloyId363.push(\"Egypt\");__alloyId363.push(\"Other\");$.__views[\"countryPopover\"] = Ti.UI.createOptionDialog(\n{options:__alloyId363,id:\"countryPopover\",title:\"Select country\",}\n);\nselectCountry?$.addListener($.__views[\"countryPopover\"],'click',selectCountry):__defers['$.__views[\"countryPopover\"]!click!selectCountry']=true;if ((OS_IOS)) {\n$.__views[\"__alloyId368\"] = Alloy.Globals.blur.createGPUBlurImageView(\n{width:Ti.UI.FILL,height:Ti.UI.FILL,top:0,image:\"/images/Carrefour-Logo.jpg\",backgroundRepeat:true,blur:{type:Alloy.Globals.blur.IOS_BLUR,radiusInPixels:4,},id:\"__alloyId368\",}\n);\n$.__views[\"index\"].add($.__views[\"__alloyId368\"]);\n}\n$.__views[\"__alloyId369\"] = Ti.UI.createScrollView(\n{id:\"__alloyId369\",}\n);\n$.__views[\"index\"].add($.__views[\"__alloyId369\"]);\n$.__views[\"container\"] = Ti.UI.createView(\n(function (){\nvar o = {};\nAlloy.deepExtend(true, o, {height:330,width:\"90%\",bottom:20,borderRadius:10,borderColor:\"silver\",});\nif (Alloy.isTablet) Alloy.deepExtend(true, o, {top:\"15%\",width:\"70%\",});\nif (Alloy.isHandheld) Alloy.deepExtend(true, o, {top:\"15%\",});\nAlloy.deepExtend(true, o, {id:\"container\",});\nreturn o;\n})()\n);\n$.__views[\"__alloyId369\"].add($.__views[\"container\"]);\n$.__views[\"__alloyId370\"] = Ti.UI.createView(\n{backgroundColor:\"#ffffff\",opacity:0.8,id:\"__alloyId370\",}\n);\n$.__views[\"container\"].add($.__views[\"__alloyId370\"]);\n$.__views[\"__alloyId371\"] = Ti.UI.createView(\n{layout:\"vertical\",id:\"__alloyId371\",}\n);\n$.__views[\"container\"].add($.__views[\"__alloyId371\"]);\n$.__views[\"__alloyId372\"] = Ti.UI.createView(\n{height:60,id:\"__alloyId372\",}\n);\n$.__views[\"__alloyId371\"].add($.__views[\"__alloyId372\"]);\n$.__views[\"__alloyId373\"] = Ti.UI.createImageView(\n{height:50,image:\"/images/appicon.png\",left:10,id:\"__alloyId373\",}\n);\n$.__views[\"__alloyId372\"].add($.__views[\"__alloyId373\"]);\n$.__views[\"__alloyId374\"] = Ti.UI.createLabel(\n(function (){\nvar o = {};\nAlloy.deepExtend(true, o, {textAlign:Titanium.UI.TEXT_ALIGNMENT_LEFT,left:70,font:{fontSize:22,},});\nif (Alloy.isHandheld) Alloy.deepExtend(true, o, {font:{fontSize:16,},});\nAlloy.deepExtend(true, o, {text:'iProductive',id:\"__alloyId374\",});\nreturn o;\n})()\n);\n$.__views[\"__alloyId372\"].add($.__views[\"__alloyId374\"]);\nif (Alloy.isTablet) {\n$.__views[\"loading\"] = Ti.UI.createActivityIndicator(\n{message:\"Loading ...\",color:\"black\",right:20,style:Titanium.UI.ActivityIndicatorStyle.DARK,id:\"loading\",}\n);\n$.__views[\"__alloyId372\"].add($.__views[\"loading\"]);\n}\n$.__views[\"__alloyId375\"] = Ti.UI.createView(\n{height:1,backgroundColor:\"gray\",id:\"__alloyId375\",}\n);\n$.__views[\"__alloyId371\"].add($.__views[\"__alloyId375\"]);\n$.__views[\"__alloyId376\"] = Ti.UI.createView(\n{backgroundColor:\"silver\",width:\"80%\",height:42,top:20,id:\"__alloyId376\",}\n);\n$.__views[\"__alloyId371\"].add($.__views[\"__alloyId376\"]);\n$.__views[\"username\"] = Ti.UI.createTextField(\n{leftButtonMode:Ti.UI.INPUT_BUTTONMODE_ALWAYS,rightButtonMode:Ti.UI.INPUT_BUTTONMODE_ALWAYS,backgroundColor:\"#ffffff\",left:1,bottom:1,width:Ti.UI.FILL,height:Ti.UI.FILL,padding:{right:10,},hintText:\"Username\",id:\"username\",next:\"password\",value:\"\",}\n);\n$.__views[\"__alloyId376\"].add($.__views[\"username\"]);\nnextField?$.addListener($.__views[\"username\"],'return',nextField):__defers['$.__views[\"username\"]!return!nextField']=true;$.__views[\"__alloyId377\"] = Ti.UI.createButton(\n{width:25,height:25,right:10,backgroundImage:\"/images/icons/user.png\",id:\"__alloyId377\",}\n);\n$.__views[\"__alloyId376\"].add($.__views[\"__alloyId377\"]);\n$.__views[\"__alloyId378\"] = Ti.UI.createView(\n{backgroundColor:\"silver\",width:\"80%\",height:42,top:20,id:\"__alloyId378\",}\n);\n$.__views[\"__alloyId371\"].add($.__views[\"__alloyId378\"]);\n$.__views[\"password\"] = Ti.UI.createTextField(\n{leftButtonMode:Ti.UI.INPUT_BUTTONMODE_ALWAYS,rightButtonMode:Ti.UI.INPUT_BUTTONMODE_ALWAYS,backgroundColor:\"#ffffff\",left:1,bottom:1,width:Ti.UI.FILL,height:Ti.UI.FILL,padding:{right:10,},hintText:\"Password\",passwordMask:true,id:\"password\",value:\"\",}\n);\n$.__views[\"__alloyId378\"].add($.__views[\"password\"]);\nlogin?$.addListener($.__views[\"password\"],'return',login):__defers['$.__views[\"password\"]!return!login']=true;$.__views[\"__alloyId379\"] = Ti.UI.createButton(\n{width:25,height:25,right:10,backgroundImage:\"/images/icons/password.png\",id:\"__alloyId379\",}\n);\n$.__views[\"__alloyId378\"].add($.__views[\"__alloyId379\"]);\n$.__views[\"__alloyId380\"] = Ti.UI.createView(\n{backgroundColor:\"silver\",width:\"80%\",height:42,top:20,id:\"__alloyId380\",}\n);\n$.__views[\"__alloyId371\"].add($.__views[\"__alloyId380\"]);\n$.__views[\"country\"] = Ti.UI.createTextField(\n{leftButtonMode:Ti.UI.INPUT_BUTTONMODE_ALWAYS,rightButtonMode:Ti.UI.INPUT_BUTTONMODE_ALWAYS,backgroundColor:\"#ffffff\",left:1,bottom:1,width:Ti.UI.FILL,height:Ti.UI.FILL,padding:{right:10,},hintText:\"Country\",editable:false,id:\"country\",value:\"Other\",domain:\"RTL_HO\",}\n);\n$.__views[\"__alloyId380\"].add($.__views[\"country\"]);\ncountryPickerShow?$.addListener($.__views[\"country\"],'click',countryPickerShow):__defers['$.__views[\"country\"]!click!countryPickerShow']=true;$.__views[\"__alloyId381\"] = Ti.UI.createButton(\n{width:25,height:25,right:10,backgroundImage:\"/images/icons/picker.png\",id:\"__alloyId381\",}\n);\n$.__views[\"__alloyId380\"].add($.__views[\"__alloyId381\"]);\ncountryPickerShow?$.addListener($.__views[\"__alloyId381\"],'click',countryPickerShow):__defers['$.__views[\"__alloyId381\"]!click!countryPickerShow']=true;$.__views[\"__alloyId382\"] = Ti.UI.createView(\n{id:\"__alloyId382\",}\n);\n$.__views[\"__alloyId371\"].add($.__views[\"__alloyId382\"]);\n$.__views[\"loginBtn\"] = Ti.UI.createButton(\n(function (){\nvar o = {};\nAlloy.deepExtend(true, o, {right:20,top:20,height:40,width:80,borderRadius:5,borderColor:Alloy.CFG.borderColor,tintColor:Alloy.CFG.borderColor,});\nif (Alloy.isHandheld) Alloy.deepExtend(true, o, {width:Ti.UI.FILL,left:20,});\nAlloy.deepExtend(true, o, {title:'Login',id:\"loginBtn\",});\nreturn o;\n})()\n);\n$.__views[\"__alloyId382\"].add($.__views[\"loginBtn\"]);\nlogin?$.addListener($.__views[\"loginBtn\"],'click',login):__defers['$.__views[\"loginBtn\"]!click!login']=true;if (!Alloy.isTablet) {\n$.__views[\"loading\"] = Ti.UI.createActivityIndicator(\n{message:\"Loading ...\",color:\"black\",right:20,style:Titanium.UI.ActivityIndicatorStyle.DARK,id:\"loading\",}\n);\n$.__views[\"__alloyId382\"].add($.__views[\"loading\"]);\n}\nexports.destroy = function () {};\n\n\t// make all IDed elements in $.__views available right on the $ in a\n\t// controller's internal code. Externally the IDed elements will\n\t// be accessed with getView().\n\t_.extend($, $.__views);\n\n\t// Controller code directly from the developer's controller file\n\t__MAPMARKER_CONTROLLER_CODE__\n\n\t// Generated code that must be executed after all UI and\n\t// controller code. One example deferred event handlers whose\n\t// functions are not defined until after the controller code\n\t// is executed.\n\t__defers['$.__views[\"countryPopover\"]!click!selectCountry'] && $.addListener($.__views[\"countryPopover\"],'click',selectCountry);__defers['$.__views[\"username\"]!return!nextField'] && $.addListener($.__views[\"username\"],'return',nextField);__defers['$.__views[\"password\"]!return!login'] && $.addListener($.__views[\"password\"],'return',login);__defers['$.__views[\"country\"]!click!countryPickerShow'] && $.addListener($.__views[\"country\"],'click',countryPickerShow);__defers['$.__views[\"__alloyId381\"]!click!countryPickerShow'] && $.addListener($.__views[\"__alloyId381\"],'click',countryPickerShow);__defers['$.__views[\"loginBtn\"]!click!login'] && $.addListener($.__views[\"loginBtn\"],'click',login);\n\n\t// Extend the $ instance with all functions and properties\n\t// defined on the exports object.\n\t_.extend($, exports);\n}\n\nmodule.exports = Controller;\n","//exports.CryptoJS = CryptoJS;\n\nTi.API.Info('IN INDEX');\n\n//THE API FUNC FOR LOGIN\nfunction getData(method, prams, onLoad, onError) {\n\n  var url = Alloy.CFG.url + method;\n  var client = Ti.Network.createHTTPClient({\n    // function called when the response data is available\n    onload: onLoad,\n    // function called when an error occurs, including a timeout\n    onerror: function (e) {\n      if (onError) {\n        //Ti.API.Info('error is: '+JSON.stringify(e));\n        onError(e);\n      } else {\n        alert(e.error);\n      }\n    },\n    timeout: 900000, // in milliseconds\n    validatesSecureCertificate: false });\n\n  // Prepare the connection.\n  client.open(\"POST\", url);\n  client.setRequestHeader(\"enctype\", \"multipart/form-data\");\n  client.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  //client.setRequestHeader(\"Content-length\", 100);\n\n  // add userAccessCode\n  prams.userAccessCode = Alloy.CFG.userAccessCode;\n\n  // mirge params\n  var prams_str = [];\n  _.each(prams, function (a, b) {\n    prams_str.push(b + '=' + a);\n  });\n\n  // Send the request.\n  client.send(prams_str.join('&'));\n\n}\n\n//CHANGE STRING TO HEX\nfunction toHex(str) {\n  var hex = '';\n  for (var i = 0; i < str.length; i++) {\n    hex += '' + str.charCodeAt(i).toString(16);\n  }\n  return hex;\n}\n\n//CHECK THE USR AND PASS\nfunction login() {\n\n  if ($.username.getValue().trim().toLowerCase().length < 3) {\n    Ti.UI.createAlertDialog({\n      title: 'Error',\n      message: 'Username required.',\n      buttonNames: ['OK'] }).\n    show();\n    $.username.focus();\n    return;\n  }\n\n  if ($.password.getValue().length < 3) {\n    Ti.UI.createAlertDialog({\n      title: 'Error',\n      message: 'Password required.',\n      buttonNames: ['OK'] }).\n    show();\n    $.password.focus();\n    return;\n  }\n\n  if ($.country.getValue().length < 3) {\n    Ti.UI.createAlertDialog({\n      title: 'Error',\n      message: 'Country required.',\n      buttonNames: ['OK'] }).\n    show();\n\n    countryPickerShow();\n    return;\n  }\n\n  var ldapDomain = $.country.domain + '%5C' + $.username.getValue().trim().toLowerCase();\n\n  // if (Ti.App.Properties.hasProperty('lastLoginUser') && Ti.App.Properties.getString('lastLoginUser').trim().toLowerCase() != $.username.getValue().trim().toLowerCase()) {\n  // alertDialog.show();\n  // return;\n  // } else\n\n  //CHECK IF ONLINE\n  if (!Ti.Network.online) {\n    offlineLogin(ldapDomain);\n    return;\n  }\n\n\n  //CHECK IF IPAD IS BEING USED\n  if (!Alloy.Globals.isiPad) {\n    $.loginBtn.hide();\n  }\n  showLoading();\n\n\n  //FOR ENCRYPTING\n  var CryptoJS = require('tripledes').CryptoJS;\n  var key = \"THYgfTYgGhfg7dxDFGH65jhkgXZSDFr84fjdX\";\n  var useHashing = true;\n\n  if (useHashing) {\n    key = CryptoJS.MD5(key).toString();\n    var k1 = key.substring(0, 16);\n    key = key + k1;\n  }\n\n  var options = {\n    mode: CryptoJS.mode.ECB,\n    padding: CryptoJS.pad.Pkcs7 };\n\n\n  var keyHex = CryptoJS.enc.Hex.parse(key);\n\n  //$.hexadecimal.text = 'hexadecimal key\\n' + keyHex.toString();\n  var password = $.password.value;\n  var textWordArray = CryptoJS.enc.Utf8.parse(password);\n  var encrypted = CryptoJS.TripleDES.encrypt(textWordArray, keyHex, options);\n  var base64String = encrypted.toString();\n\n  //Ti.API.Info('base64: ' + base64String);\n  //alert('base64: ' + base64String);\n\n  // function decrypt(e) {\n  // var base64String = $.result.value;\n  //\n  // var decrypted = CryptoJS.TripleDES.decrypt({\n  // ciphertext : CryptoJS.enc.Base64.parse(base64String)\n  // }, keyHex, options);\n  //\n  // alert('decrypted: ' + decrypted.toString(CryptoJS.enc.Utf8));\n  // }\n\n  // var crypto = require ('CryptoJS/rollups/tripledes');\n  //\n  //\n  // var keyHex = crypto.enc.Utf8.parse(\"THYgfTYgGhfg7dxDFGH65jhkgXZSDFr84fjdX\");\n  // //Ti.API.Info(\"keyHex after utf8: \"+keyHex.toString());\n  // //Ti.API.Info(\"P@ssw0rd after utf8: \"+crypto.enc.Utf8.parse($.password.getValue()).toString());\n  // var result = crypto.TripleDES.encrypt(crypto.enc.Utf8.parse($.password.getValue()), keyHex, { mode: crypto.ECB});//, padding : crypto.zeropad});\n  // //Ti.API.Info(\"Encrypted value: \"+result.toString());\n\n  //var CryptoJS_Core = require('tripledes');\n\n  //var CryptoJS_Algo = require('md5');\n\n  //alert(CryptoJS_Core.enc.Utf8.parse(\"THYgfTYgGhfg7dxDFGH65jhkgXZSDFr84fjdX\").toString());\n\n  //alert('key: '+key_encrypt);\n  //alert('pass: '+password);\n  //DOSISVS\n  //var key_encrypt2 = Titanium.Utils.md5HexDigest(\"THYgfTYgGhfg7dxDFGH65jhkgXZSDFr84fjdX\");\n  //alert(CryptoJS.algo.MD5(\"hi\"));\n  //var key_encrypt = Ti.Utils.md5HexDigest(Ti.Utils.base64encode(\"THYgfTYgGhfg7dxDFGH65jhkgXZSDFr84fjdX\").toString());\n\n  //var key_encrypt = Titanium.Utils.md5HexDigest(\"VEhZZ2ZUWWdHaGZnN2R4REZHSDY1amhrZ1haU0RGcjg0ZmpkWA==\");\n  //alert(\"md5 = \"+key_encrypt);\n  //alert(\"123 as utf8= \"+CryptoJS_Core.enc.Utf8.parse(\"123\").toString());\n  //e8b911d3ac08f068c7eda81d1a84ff5d\n\n  //var encrypted_password = CryptoJS_Core.TripleDES.encrypt(Ti.Utils.base64encode(\"123\").toString(), key_encrypt,\n  //    { mode: CryptoJS_titanium.ECB});\n  // //Ti.API.Info(encrypted_password.toString());\n  //alert('pass: '+encrypted_password);\n\n  // var my = {\n  // mod : require('SlowAES/Ti.SlowAES')\n  // };\n  //\n  //\n  // var helper = require('SlowAES/cryptoHelpers');\n  //\n  // //Create a new instance of the SlowAES module\n  // var crypto = new my.mod();\n  //\n  // var encryptedValue = crypto.encrypt(\"123\",\"test\");\n  // alert ('Encrypted:' + Ti.Utils.base64encode (encryptedValue));\n  //\n  // //Blowfish\n\n  //var Blowfish = require('com.dmrsolutions.blowfish').Blowfish;\n\n  //var bf = new Blowfish(\"test\"),\n  //  crypted = bf.encrypt(\"P@ssw0rd\");\n\n  //alert (Titanium.Utils.base64encode(crypted));\n  // alert(\"normarl: \"+crypted);\n  ////Ti.API.Info('Encrypted:' + Ti.Utils.base64encode (encryptedValue));\n  // //Ti.API.Info(\"normal: \"+crypted);\n\n  //Ti.API.Info($.country.domain + '%5C' + $.username.getValue().trim().toLowerCase());\n  //Ti.API.Info(base64String);\n  getData('SVM_AuthenticateUser', {\n    Username: $.country.domain + '%5C' + $.username.getValue().trim().toLowerCase(),\n    Password: base64String },\n  function (e) {\n    checkData();\n    //Ti.API.Info(\"this.responseText= \" + this.responseText);\n\n    if (!Alloy.Globals.isiPad) {\n      $.loginBtn.show();\n    }\n    hideLoading();\n\n    // Data is returned from the blog, start parsing\n    var xml = this.responseXML.documentElement;\n\n    // blog posts are in nodes named \"item\"\n    var items = xml.getElementsByTagName(\"Table1\");\n    if (items.length == 0) {\n      Ti.UI.createAlertDialog({\n        title: 'Error',\n        message: 'Username or password not correct.',\n        buttonNames: ['OK'] }).\n      show();\n      return;\n    }\n\n    var item = items.item(0);\n    var stringToBoolToNumber = function (key) {\n      //Ti.API.Info('>>>>########## item text is: '+item.getElementsByTagName(key).item(0).text + \" ### and key is: \"+key);\n      return parseInt(item.getElementsByTagName(key).item(0).text.replace('true', 1).replace('True', 1).replace('false', 0).replace('False', 0));\n    };\n    //Ti.API.Info(\"HasLP== \" + stringToBoolToNumber(\"HasLP\"));\n    Alloy.Globals.HasLP = stringToBoolToNumber(\"HasLP\");\n\n    //BY hassan\n    /*if (!Alloy.Globals.isiPad && stringToBoolToNumber('HasTaskList') == 0){\n     //if (stringToBoolToNumber('HasTaskList') == 0) {\n     Ti.UI.createAlertDialog({\n     title : 'Not allowed',\n     message : 'Your account has no access on task list, you can only use iPad version of this app.',\n     buttonNames : ['OK']\n     }).show();\n     return;\n     }*/\n\n    if (Ti.App.Properties.getString('lastLoginUser', '') != $.username.getValue().trim().toLowerCase()) {\n      deleteData();\n    }\n\n    Ti.App.Properties.setString('lastLoginUser', $.username.getValue().trim().toLowerCase());\n    Ti.App.Properties.setString('lastPassword', Ti.Utils.md5HexDigest($.password.getValue()));\n\n    var user = {\n      ldap_user: ldapDomain,\n      domain: $.country.domain,\n      Username: $.username.getValue().trim().toLowerCase(),\n      Password: \"\", //$.password.getValue(),\n      ForceSync: stringToBoolToNumber('ForceSync'),\n      EnableSync: stringToBoolToNumber('EnableSync'),\n      WeeklyReminderDay: stringToBoolToNumber('WeeklyReminderDay'),\n      MonthlyReminderDay: stringToBoolToNumber('MonthlyReminderDay'),\n      SemesterReminderDay: stringToBoolToNumber('SemesterReminderDay'),\n      YearlyReminderDay: stringToBoolToNumber('YearlyReminderDay'),\n      //Removed date from the server\n      LastSyncDate: item.getElementsByTagName('LastSyncDate').item(0).text,\n      HasTaskList: stringToBoolToNumber('HasTaskList'),\n      HasLP: stringToBoolToNumber('HasLP') };\n\n\n    Ti.App.Properties.setObject('Alloy.Globals.user', user);\n\n    Alloy.Globals.user = Alloy.createModel('user', {\n      id: user.ldap_user });\n\n    //alert(\"last sync date= \"+item.getElementsByTagName('LastSyncDate').item(0).text);\n    Alloy.Globals.user.save(user);\n    saveUserInCache(user);\n    $.username.value = \"\";\n    $.password.value = \"\";\n    proceedToContainerPage();\n  }, function (e) {\n\n    if (!Alloy.Globals.isiPad) {\n      $.loginBtn.show();\n    }\n    hideLoading();\n    offlineLogin(ldapDomain, e.error);\n  });\n}\n\nfunction saveUserInCache(userData) {\n  // \tvar userName = Ti.App.Properties.getString('lastLoginUser',\"noUser\");\n  // \tvar usersData = Ti.App.Properties.getList(\"CachedDataByUser\",[]);\n  //\n  // \tif (usersData.filter(function(user){\n  // \treturn user.user == Ti.App.Properties.getString('lastLoginUser',\"noUser\");\n  // }).length) {\n  // \t\tusersData.forEach(function(user, i){\n  // \t\t\tif (user.user == userName) {\n  // \t\t\t\tusersData[i].userData = userData;\n  // \t\t\t}\n  // \t\t});\n  // \t} else {\n  // \t\tusersData.push({\n  // \t\t\tuser: userName,\n  // \t\t\tuserData: userData,\n  // \t\t\tmethods: []\n  // \t\t});\n  // \t}\n  // \tTi.App.Properties.setList(\"CachedDataByUser\",usersData);\n}\n\n\nfunction proceedToContainerPage() {\n  // var cachedData = require('/cachedData');\n  //\n  // cachedData.loadCacheIfAvailable(function(){\n  // \thideLoading();\n  // });\n  Alloy.createController('container').getView().open();\n}\n\nfunction checkData() {\n  // //Ti.API.Info('>>>>>>>>>>>>>>>>>>>>>> check will compare \"'+$.username.getValue().trim().toLowerCase()+'\" with \"'+Ti.App.Properties.getString('lastLoginUser',\"noUser\")+'\"');\n  // if($.username.getValue().trim().toLowerCase() != Ti.App.Properties.getString('lastLoginUser',\"noUser\")) {\n  // \t//Ti.API.Info('>>>>>>>>>>>>>>>>>>>>>> check 279');\n  // \tdeleteData();\n  // }\n  //deleteData();\n}\n\n\nfunction deleteData() {\n  var db = Ti.Database.open('_alloy_');\n  _.each(['answers', 'auditRecord', 'employees', 'questions_answers_scorecard', 'questions_scorecard', 'questions', 'sections', 'stores', 'tasks_completed', 'tasks', 'templates', 'user', 'sqlite_sequence'], function (table) {\n    try {\n      db.execute(\"DELETE FROM \" + table);\n    } catch (err) {\n    }\n  });\n  db.close();\n  //Ti.App.Properties.removeProperty('lastLoginUser');\n}\n\n//not used\nfunction checkDeleteData() {\n  // empty db\n  var alertDialog = Ti.UI.createAlertDialog({\n    title: 'Empty old database',\n    message: \"Are you a new user? Logging in will delete all data saved by the previous user. Click ‘Cancel’ to retain all saved data.\",\n    buttonNames: ['OK', 'Cancel'] });\n\n\n  alertDialog.addEventListener('click', function (e) {\n\n    if (e.index == 0) {\n\n      var db = Ti.Database.open('_alloy_');\n      _.each(['answers', 'auditRecord', 'employees', 'questions_answers_scorecard', 'questions_scorecard', 'questions', 'sections', 'stores', 'tasks_completed', 'tasks', 'templates', 'user', 'sqlite_sequence'], function (table) {\n        try {\n          db.execute(\"DELETE FROM \" + table);\n        } catch (err) {}\n      });\n      db.close();\n      //Ti.App.Properties.removeProperty('lastLoginUser');\n      login();\n    } else {\n      login();\n    }\n  });\n\n  alertDialog.show();\n}\n\n\nfunction showLoading() {\n  $.loading.show();\n  $.loginBtn.opacity = 0.4;\n  $.loginBtn.touchEnabled = false;\n}\n\nfunction hideLoading() {\n  $.loading.hide();\n  $.loginBtn.opacity = 1;\n  $.loginBtn.touchEnabled = true;\n}\n\n\nfunction offlineLogin(ldapDomain, reason) {\n  showLoading();\n\n\n  //Ti.API.Info('>>>>>>>>>>>>>>>>>>>>>> offline login triggered');\n  checkData();\n  reason = reason || 'No Internet connection.';\n\n  if (!Ti.App.Properties.hasProperty('lastLoginUser') && !Ti.App.Properties.hasProperty('lastPassword') || Ti.App.Properties.getString('lastLoginUser', '') != $.username.getValue().trim().toLowerCase()) {\n    hideLoading();\n    Ti.UI.createAlertDialog({\n      title: 'Offline Login',\n      message: 'We tried to login with offline data, but unfortunately last time you logged in with diffrent username.\\n reason to offline login : ' + reason,\n      buttonNames: ['OK'] }).\n    show();\n  } else if (Ti.Utils.md5HexDigest($.password.getValue()) == Ti.App.Properties.getString('lastPassword')) {\n\n    var alertDialog = Ti.UI.createAlertDialog({\n      title: 'Offline Login',\n      message: 'You logged in using offline cached database.\\n reason to offline login : ' + reason,\n      buttonNames: ['OK'] });\n\n\n    alertDialog.show();\n\n    alertDialog.addEventListener(\"click\", function (e) {\n      Ti.App.Properties.setString('lastLoginUser', $.username.getValue().trim().toLowerCase());\n      var user = Ti.App.Properties.getObject('Alloy.Globals.user', {});\n      Alloy.Globals.user = Alloy.createModel('user', {\n        id: Ti.App.Properties.getString('lastLoginUser', '') });\n\n      //alert(\"last sync date= \"+item.getElementsByTagName('LastSyncDate').item(0).text);\n      Alloy.Globals.user.save(user);\n      proceedToContainerPage();\n    });\n\n    // Alloy.Globals.user = Alloy.createModel('user');\n    // Alloy.Globals.user.fetch({\n    // \tid : ldapDomain\n    // });\n    // Alloy.createController('container').getView().open();\n    // //Ti.API.Info(\"user HasLP is\" + JSON.stringify(Alloy.Globals.user.get(\"HasLP\")));\n    // //Alloy.Globals.HasLP\n    // Alloy.Globals.HasLP = Alloy.Globals.user.get(\"HasLP\") == 1;\n  } else {\n    hideLoading();\n    Ti.UI.createAlertDialog({\n      title: 'Offline Login',\n      message: 'Password not like last loggedin password, try again.\\n reason to offline login : ' + reason,\n      buttonNames: ['OK'] }).\n    show();\n  }\n}\n\n// TIP: If it not working, you need to login for 1 time with our demo username & password\n//if (true && ENV_DEV) {\n\n//Alloy.Globals.user = Alloy.createModel('user', {\n//\tid : 'RTL_HO%5CMojo'\n//\t});\n\n//\tAlloy.Globals.user.fetch();\n\n//\tAlloy.createController('container').getView().open();\n//}\n//else {\n\n$.index.open();\n//}\n\n$.username.focus();\n\nvar nextField = function (e) {\n  $[e.source.next].focus();\n};\n\n$.country.rightButton = Ti.UI.createButton({\n  image: '/images/icons/picker.png' });\n\n\nvar countryPickerShow = function () {\n  $.countryPopover.show();\n  // if (Alloy.Globals.isiPad) {\n  //\n  // \t$.countryPopover.show({\n  // \t\tview : $.country\n  // \t});\n  // } else {\n  // \t$.countryPopover.show();\n  // }\n};\n\nvar countryPickerHide = function () {\n  $.countryPopover.hide();\n};\n\nvar selectCountry = function (e) {\n\n  var countries = [{\n    title: \"KSA\",\n    domain: \"Saudi\" },\n  {\n    title: \"Iran\",\n    domain: \"iran\" },\n  {\n    title: \"Egypt\",\n    domain: \"Egypt\" },\n  {\n    title: \"Other\",\n    domain: \"RTL_HO\" }];\n\n\n  var country = countries[e.index];\n\n  $.country.setValue(country.title);\n  $.country.domain = country.domain;\n\n  //Ti.API.Info('country domain is now: =====> '+$.country.domain);\n\n};\n\n// if (!Alloy.Globals.isiPad) {\n//\n// \tvar selectCountry = function(e) {\n//\n// \t\tvar countries = [{\n// \t\t\ttitle : \"KSA\",\n// \t\t\tdomain : \"Saudi\"\n// \t\t}, {\n// \t\t\ttitle : \"Iran\",\n// \t\t\tdomain : \"iran\"\n// \t\t}, {\n// \t\t\ttitle : \"Egypt\",\n// \t\t\tdomain : \"Egypt\"\n// \t\t}, {\n// \t\t\ttitle : \"Other\",\n// \t\t\tdomain : \"RTL_HO\"\n// \t\t}];\n//\n// \t\tvar country = countries[e.index];\n//\n// \t\t$.country.setValue(country.title);\n// \t\t$.country.domain = country.domain;\n// \t};\n//\n// } else if (OS_IOS) {\n//\n// \tvar selectCountry = function(e) {\n// \t\tcountryPickerHide();\n// \t\tvar item = e.section.getItemAt(e.itemIndex);\n//\n// \t\t// mark check\n// \t\tif (item.properties.accessoryType == Ti.UI.LIST_ACCESSORY_TYPE_NONE) {\n// \t\t\titem.properties.accessoryType = Ti.UI.LIST_ACCESSORY_TYPE_CHECKMARK;\n// \t\t} else {\n// \t\t\titem.properties.accessoryType = Ti.UI.LIST_ACCESSORY_TYPE_NONE;\n// \t\t}\n// \t\te.section.updateItemAt(e.itemIndex, item);\n//\n// \t\t// un-mark\n// \t\tif ($.country.lastIndex != e.itemIndex) {\n// \t\t\tvar lastItem = e.section.getItemAt($.country.lastIndex);\n// \t\t\tlastItem.properties.accessoryType = Ti.UI.LIST_ACCESSORY_TYPE_NONE;\n// \t\t\te.section.updateItemAt($.country.lastIndex, lastItem);\n// \t\t}\n//\n// \t\t$.country.lastIndex = e.itemIndex;\n// \t\t$.country.setValue(item.properties.title);\n// \t\t$.country.domain = item.properties.domain;\n// \t};\n// }\nif (OS_IOS && Alloy.Globals.isiPad) {\n  var orientation = function (e) {\n    if (e.source.isPortrait()) {\n      $.container.animate({\n        top: 200 });\n\n    } else {\n      $.container.animate({\n        top: 200 });\n\n    }\n  };\n\n  Ti.Gesture.addEventListener('orientationchange', orientation);\n}\n\n$.index.addEventListener(\"close\", function () {\n  $.destroy();\n});\n\nTi.App.addEventListener('logout', loadUsername);\n\nfunction loadUsername() {\n  //Ti.API.Info(\"loading username...\");\n  $.username.value = Ti.App.Properties.getString('lastLoginUser', \"\");\n  // setTimeout(function(){\n  // \t//Ti.API.Info('should hide loading');\n  // \thideLoading();\n  // },300);\n  hideLoading();\n}\n\nAlloy.Globals.index = this.getView();\nloadUsername();"]}