{"version":3,"sources":["template.js","app/widgets/nl.fokkezb.loading/controllers/view.js"],"names":[],"mappingsfile":"/Users/exsalameh/Desktop/iProductive-2/Resources/iphone/alloy/widgets/nl.fokkezb.loading/controllers/view.js","sourceRoot":"/Users/exsalameh/Desktop/iProductive-2","sourcesContent":["var Alloy = require('/alloy'),\n\tBackbone = Alloy.Backbone,\n\t_ = Alloy._;\n\n\nfunction WPATH(s) {\n\tvar index = s.lastIndexOf('/');\n\tvar path = index === -1 ?\n\t\t'nl.fokkezb.loading/' + s :\n\t\ts.substring(0, index) + '/nl.fokkezb.loading/' + s.substring(index + 1);\n\n\treturn path.indexOf('/') !== 0 ? '/' + path : path;\n}\n\nfunction __processArg(obj, key) {\n\tvar arg = null;\n\tif (obj) {\n\t\targ = obj[key] || null;\n\t}\n\treturn arg;\n}\n\nfunction Controller() {\n\tvar Widget = new (require('/alloy/widget'))('nl.fokkezb.loading');this.__widgetId='nl.fokkezb.loading';\n\trequire('/alloy/controllers/' + 'BaseController').apply(this, Array.prototype.slice.call(arguments));\n\tthis.__controllerPath = 'view';\n\tthis.args = arguments[0] || {};\n\n\tif (arguments[0]) {\n\t\tvar __parentSymbol = __processArg(arguments[0], '__parentSymbol');\n\t\tvar $model = __processArg(arguments[0], '$model');\n\t\tvar __itemTemplate = __processArg(arguments[0], '__itemTemplate');\n\t}\n\tvar $ = this;\n\tvar exports = {};\n\tvar __defers = {};\n\n\t// Generated code that must be executed before all UI and/or\n\t// controller code. One example is all model and collection\n\t// declarations from markup.\n\t\n\n\t// Generated UI code\n\t$.__views[\"loadingMask\"] = Ti.UI.createView(\n{backgroundColor:\"#5000\",visible:false,id:\"loadingMask\",}\n);\n$.__views[\"loadingMask\"] && $.addTopLevelView($.__views[\"loadingMask\"]);\ncancel?$.addListener($.__views[\"loadingMask\"],'click',cancel):__defers['$.__views[\"loadingMask\"]!click!cancel']=true;$.__views[\"loadingOuter\"] = Ti.UI.createView(\n{width:Ti.UI.SIZE,height:Ti.UI.SIZE,borderRadius:10,backgroundColor:\"#C000\",id:\"loadingOuter\",}\n);\n$.__views[\"loadingMask\"].add($.__views[\"loadingOuter\"]);\n$.__views[\"loadingInner\"] = Ti.UI.createView(\n{top:\"20dp\",right:\"20dp\",bottom:\"20dp\",left:\"20dp\",width:Ti.UI.SIZE,height:Ti.UI.SIZE,layout:\"vertical\",id:\"loadingInner\",}\n);\n$.__views[\"loadingOuter\"].add($.__views[\"loadingInner\"]);\n$.__views[\"loadingIndicator\"] = Ti.UI.createActivityIndicator(\n{message:\"Loading ...\",color:\"black\",style:Titanium.UI.ActivityIndicatorStyle.BIG,top:\"0dp\",id:\"loadingIndicator\",}\n);\n$.__views[\"loadingInner\"].add($.__views[\"loadingIndicator\"]);\n$.__views[\"loadingImages\"] = Ti.UI.createImageView(\n{top:\"0dp\",images:[\"/images/nl.fokkezb.loading/00.png\",\"/images/nl.fokkezb.loading/01.png\",\"/images/nl.fokkezb.loading/02.png\",\"/images/nl.fokkezb.loading/03.png\",\"/images/nl.fokkezb.loading/04.png\",\"/images/nl.fokkezb.loading/05.png\",\"/images/nl.fokkezb.loading/06.png\",\"/images/nl.fokkezb.loading/07.png\",\"/images/nl.fokkezb.loading/08.png\",\"/images/nl.fokkezb.loading/09.png\",\"/images/nl.fokkezb.loading/10.png\",\"/images/nl.fokkezb.loading/11.png\",],id:\"loadingImages\",}\n);\n$.__views[\"loadingInner\"].add($.__views[\"loadingImages\"]);\n$.__views[\"loadingMessage\"] = Ti.UI.createLabel(\n{textAlign:Ti.UI.TEXT_ALIGNMENT_CENTER,top:\"20dp\",width:Ti.UI.SIZE,height:Ti.UI.SIZE,text:L('loadingMessage','Loading..'),color:\"#fff\",font:{fontSize:\"16dp\",},id:\"loadingMessage\",}\n);\n$.__views[\"loadingInner\"].add($.__views[\"loadingMessage\"]);\nexports.destroy = function () {};\n\n\t// make all IDed elements in $.__views available right on the $ in a\n\t// controller's internal code. Externally the IDed elements will\n\t// be accessed with getView().\n\t_.extend($, $.__views);\n\n\t// Controller code directly from the developer's controller file\n\t__MAPMARKER_CONTROLLER_CODE__\n\n\t// Generated code that must be executed after all UI and\n\t// controller code. One example deferred event handlers whose\n\t// functions are not defined until after the controller code\n\t// is executed.\n\t__defers['$.__views[\"loadingMask\"]!click!cancel'] && $.addListener($.__views[\"loadingMask\"],'click',cancel);\n\n\t// Extend the $ instance with all functions and properties\n\t// defined on the exports object.\n\t_.extend($, exports);\n}\n\nmodule.exports = Controller;\n","var useImages = false,\ncancelable = null;\n\n$.show = show;\n$.hide = hide;\n$.update = update;\n$.cancel = cancel;\n\nObject.defineProperty($, 'visible', {\n  get: function () {\n    return $.loadingMask.visible;\n  },\n  set: function (visible) {\n    return visible ? show() : hide();\n  } });\n\n\n(function constructor(args) {\n\n  if ($.loadingMask.images) {\n    useImages = true;\n\n    $.loadingInner.remove($.loadingIndicator);\n    $.loadingIndicator = null;\n\n  } else {\n    $.loadingInner.remove($.loadingImages);\n    $.loadingImages = null;\n  }\n\n  args = null;\n\n})(arguments[0] || {});\n\nfunction update(_message, _cancelable) {\n  $.loadingMessage.text = _message || L('loadingMessage', 'Loading...');\n  cancelable = _cancelable;\n}\n\nfunction cancel() {\n\n  if (_.isFunction(cancelable)) {\n    cancelable();\n\n    $.trigger('cancel');\n\n    hide();\n  }\n}\n\nfunction show(_message, _cancelable) {\n  update(_message, _cancelable);\n\n  $.loadingMask.show();\n\n  if (useImages) {\n    $.loadingImages.start();\n  } else {\n    $.loadingIndicator.show();\n  }\n}\n\nfunction hide() {\n  $.loadingMask.hide();\n}"]}